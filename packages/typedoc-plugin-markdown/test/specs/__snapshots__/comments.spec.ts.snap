// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Comments should compile comments for module: (Output File Strategy "members") (Option Group "1") 1`] = `
"# typedoc-stubs

Comments form module comments

## Links

Links using \`{@link}\` inline tags.

- [CommentInterface](interfaces/CommentInterface.md) - Links to CommentInterface
- [Links to CommentInterface.prop](interfaces/CommentInterface.md)
- [Links to CommentInterface.propb](interfaces/CommentInterface.md)
- [CommentEnum.MemberB](enumerations/CommentEnum.md)
- [SameName:var](variables/SameName.md)
- [SameName:interface](interfaces/SameName.md)
- [SameName.prop](interfaces/SameName.md)
- [prop:var](variables/prop.md)
- [_prop_with_underscore:var](variables/prop_with_underscore.md)

External links:

- [Google](https://www.google.com)
- [\`https://www.google.com\`](https://www.google.com)

## Tag A

Comments for a tag

## Tag B

Comments for tag written on same line

## Html And Jsx

A \`<tag>\`\`</tag>\` in comments

Closing \`</element>\` on its own

A \`<tag>\` in backticks

Some object \\{ x: 1 \\}. Another object \`{ x: 1 }\`.

<div style={{backgroundColor: "#fff", padding: 16}}>
<img style={{display: "block"}} height="48" width="48"/>
</div>

Some random {{braces}} in comments \\{\\}.

\`\`\`
A <tag> in a code block
Some <p> html </p> inside codeblock
\`\`\`

## Media

You can include media in doc comments:

![alt SomeAlt](media/logo.png)

And include other files:

This is a simple example on how to use include.

![My image alt text](media/logo.png)
 [[include:not-found.md]]

## Code Blocks

\`\`\`css
.class {color:red}
\`\`\`

\`\`\`html
<div>x</div> <tag>y</tag>
\`\`\`

\`single line <code> {block}\`

## Enumerations

- [CommentEnum](enumerations/CommentEnum.md)

## Interfaces

- [CommentInterface](interfaces/CommentInterface.md)
- [CommentInterfaceExtended](interfaces/CommentInterfaceExtended.md)
- [SameName](interfaces/SameName.md)

## Variables

- [SameName](variables/SameName.md)
- [\\_prop\\_with\\_underscore](variables/prop_with_underscore.md)
- [prop](variables/prop.md)
- [propb](variables/propb.md)
"
`;

exports[`Comments should compile comments for module: (Output File Strategy "members") (Option Group "2") 1`] = `
"# typedoc-stubs

Comments form module comments

## Links

Links using \`{@link}\` inline tags.

- [CommentInterface](/some-path/interfaces/CommentInterface.md) - Links to CommentInterface
- [Links to CommentInterface.prop](/some-path/interfaces/CommentInterface.md#prop)
- [Links to CommentInterface.propb](/some-path/interfaces/CommentInterface.md#propb)
- [CommentEnum.MemberB](/some-path/enumerations/CommentEnum.md#MemberB)
- [SameName:var](/some-path/variables/SameName.md)
- [SameName:interface](/some-path/interfaces/SameName.md)
- [SameName.prop](/some-path/interfaces/SameName.md#prop)
- [prop:var](/some-path/variables/prop.md)
- [_prop_with_underscore:var](/some-path/variables/prop_with_underscore.md)

External links:

- [Google](https://www.google.com)
- [\`https://www.google.com\`](https://www.google.com)

## Tag A

Comments for a tag

## Tag B

Comments for tag written on same line

## Html And Jsx

A \`<tag>\`\`</tag>\` in comments

Closing \`</element>\` on its own

A \`<tag>\` in backticks

Some object \\{ x: 1 \\}. Another object \`{ x: 1 }\`.

<div style={{backgroundColor: "#fff", padding: 16}}>
<img style={{display: "block"}} height="48" width="48"/>
</div>

Some random {{braces}} in comments \\{\\}.

\`\`\`
A <tag> in a code block
Some <p> html </p> inside codeblock
\`\`\`

## Media

You can include media in doc comments:

![alt SomeAlt](media/logo.png)

And include other files:

This is a simple example on how to use include.

![My image alt text](media/logo.png)
 [[include:not-found.md]]

## Code Blocks

\`\`\`css
.class {color:red}
\`\`\`

\`\`\`html
<div>x</div> <tag>y</tag>
\`\`\`

\`single line <code> {block}\`

## Enumerations

- [CommentEnum](/some-path/enumerations/CommentEnum.md)

## Interfaces

- [CommentInterface](/some-path/interfaces/CommentInterface.md)
- [CommentInterfaceExtended](/some-path/interfaces/CommentInterfaceExtended.md)
- [SameName](/some-path/interfaces/SameName.md)

## Variables

- [SameName](/some-path/variables/SameName.md)
- [\\_prop\\_with\\_underscore](/some-path/variables/prop_with_underscore.md)
- [prop](/some-path/variables/prop.md)
- [propb](/some-path/variables/propb.md)
"
`;

exports[`Comments should compile comments for module: (Output File Strategy "modules") (Option Group "1") 1`] = `
"# typedoc-stubs

Comments form module comments

## Links

Links using \`{@link}\` inline tags.

- [CommentInterface](README.md#commentinterface) - Links to CommentInterface
- [Links to CommentInterface.prop](README.md#commentinterface)
- [Links to CommentInterface.propb](README.md#commentinterface)
- [CommentEnum.MemberB](README.md#commentenum)
- [SameName:var](README.md#samename-1)
- [SameName:interface](README.md#samename)
- [SameName.prop](README.md#samename)
- [prop:var](README.md#prop)
- [_prop_with_underscore:var](README.md#_prop_with_underscore)

External links:

- [Google](https://www.google.com)
- [\`https://www.google.com\`](https://www.google.com)

## Tag A

Comments for a tag

## Tag B

Comments for tag written on same line

## Html And Jsx

A \`<tag>\`\`</tag>\` in comments

Closing \`</element>\` on its own

A \`<tag>\` in backticks

Some object \\{ x: 1 \\}. Another object \`{ x: 1 }\`.

<div style={{backgroundColor: "#fff", padding: 16}}>
<img style={{display: "block"}} height="48" width="48"/>
</div>

Some random {{braces}} in comments \\{\\}.

\`\`\`
A <tag> in a code block
Some <p> html </p> inside codeblock
\`\`\`

## Media

You can include media in doc comments:

![alt SomeAlt](media/logo.png)

And include other files:

This is a simple example on how to use include.

![My image alt text](media/logo.png)
 [[include:not-found.md]]

## Code Blocks

\`\`\`css
.class {color:red}
\`\`\`

\`\`\`html
<div>x</div> <tag>y</tag>
\`\`\`

\`single line <code> {block}\`

## Enumerations

### CommentEnum

#### Enumeration Members

| Enumeration Member | Value | Description |
| :------ | :------ | :------ |
| \`Member\` | \`0\` | Comment for Member<br /><br />**Deprecated**<br />Deprecated member<br /><br />**See**<br />[SameName](README.md#samename-1) |
| \`MemberB\` | \`1\` | - |

## Interfaces

### CommentInterface

#### Extended by

- [\`CommentInterfaceExtended\`](README.md#commentinterfaceextended)

#### Properties

| Property | Type |
| :------ | :------ |
| \`prop\` | \`string\` |
| \`propb\` | \`string\` |

***

### CommentInterfaceExtended

#### Extends

- [\`CommentInterface\`](README.md#commentinterface)

#### Properties

| Property | Type | Inherited from |
| :------ | :------ | :------ |
| \`prop\` | \`string\` | [\`CommentInterface\`](README.md#commentinterface).\`prop\` |
| \`propb\` | \`string\` | [\`CommentInterface\`](README.md#commentinterface).\`propb\` |
| \`propc\` | \`string\` | - |

***

### SameName

#### Properties

| Property | Type |
| :------ | :------ |
| \`prop\` | \`string\` |
| \`propb\` | \`string\` |

## Variables

### SameName

• **SameName**: \`true\`

***

### \\_prop\\_with\\_underscore

• **\`const\`** **\\_prop\\_with\\_underscore**: \`true\` = \`true\`

***

### prop

• **\`const\`** **prop**: \`true\` = \`true\`

***

### propb

• **\`const\`** **propb**: \`true\` = \`true\`
"
`;

exports[`Comments should compile comments for module: (Output File Strategy "modules") (Option Group "2") 1`] = `
"# typedoc-stubs

Comments form module comments

## Links

Links using \`{@link}\` inline tags.

- [CommentInterface](/some-path/README.md#CommentInterface) - Links to CommentInterface
- [Links to CommentInterface.prop](/some-path/README.md#prop)
- [Links to CommentInterface.propb](/some-path/README.md#propb)
- [CommentEnum.MemberB](/some-path/README.md#MemberB)
- [SameName:var](/some-path/README.md#SameName-1)
- [SameName:interface](/some-path/README.md#SameName)
- [SameName.prop](/some-path/README.md#prop-2)
- [prop:var](/some-path/README.md#prop-3)
- [_prop_with_underscore:var](/some-path/README.md#_prop_with_underscore)

External links:

- [Google](https://www.google.com)
- [\`https://www.google.com\`](https://www.google.com)

## Tag A

Comments for a tag

## Tag B

Comments for tag written on same line

## Html And Jsx

A \`<tag>\`\`</tag>\` in comments

Closing \`</element>\` on its own

A \`<tag>\` in backticks

Some object \\{ x: 1 \\}. Another object \`{ x: 1 }\`.

<div style={{backgroundColor: "#fff", padding: 16}}>
<img style={{display: "block"}} height="48" width="48"/>
</div>

Some random {{braces}} in comments \\{\\}.

\`\`\`
A <tag> in a code block
Some <p> html </p> inside codeblock
\`\`\`

## Media

You can include media in doc comments:

![alt SomeAlt](media/logo.png)

And include other files:

This is a simple example on how to use include.

![My image alt text](media/logo.png)
 [[include:not-found.md]]

## Code Blocks

\`\`\`css
.class {color:red}
\`\`\`

\`\`\`html
<div>x</div> <tag>y</tag>
\`\`\`

\`single line <code> {block}\`

## Enumerations

<a id="CommentEnum" name="CommentEnum"></a>

### CommentEnum

#### Enumeration Members

| Enumeration Member | Value | Description |
| :------ | :------ | :------ |
| <a id="Member" name="Member"></a> \`Member\` | \`0\` | Comment for Member<br /><br />**Deprecated**<br />Deprecated member<br /><br />**See**<br />[SameName](/some-path/README.md#SameName-1) |
| <a id="MemberB" name="MemberB"></a> \`MemberB\` | \`1\` | - |

## Interfaces

<a id="CommentInterface" name="CommentInterface"></a>

### CommentInterface

#### Extended by

- [\`CommentInterfaceExtended\`](/some-path/README.md#CommentInterfaceExtended)

#### Properties

| Property | Type |
| :------ | :------ |
| <a id="prop" name="prop"></a> \`prop\` | \`string\` |
| <a id="propb" name="propb"></a> \`propb\` | \`string\` |

***

<a id="CommentInterfaceExtended" name="CommentInterfaceExtended"></a>

### CommentInterfaceExtended

#### Extends

- [\`CommentInterface\`](/some-path/README.md#CommentInterface)

#### Properties

| Property | Type | Inherited from |
| :------ | :------ | :------ |
| <a id="prop-1" name="prop-1"></a> \`prop\` | \`string\` | [\`CommentInterface\`](/some-path/README.md#CommentInterface).[\`prop\`](/some-path/README.md#prop) |
| <a id="propb-1" name="propb-1"></a> \`propb\` | \`string\` | [\`CommentInterface\`](/some-path/README.md#CommentInterface).[\`propb\`](/some-path/README.md#propb) |
| <a id="propc" name="propc"></a> \`propc\` | \`string\` | - |

***

<a id="SameName" name="SameName"></a>

### SameName

#### Properties

| Property | Type |
| :------ | :------ |
| <a id="prop-2" name="prop-2"></a> \`prop\` | \`string\` |
| <a id="propb-2" name="propb-2"></a> \`propb\` | \`string\` |

## Variables

<a id="SameName-1" name="SameName-1"></a>

### SameName

• **SameName**: \`true\`

***

<a id="_prop_with_underscore" name="_prop_with_underscore"></a>

### \\_prop\\_with\\_underscore

• **\`const\`** **\\_prop\\_with\\_underscore**: \`true\` = \`true\`

***

<a id="prop-3" name="prop-3"></a>

### prop

• **\`const\`** **prop**: \`true\` = \`true\`

***

<a id="propb-3" name="propb-3"></a>

### propb

• **\`const\`** **propb**: \`true\` = \`true\`
"
`;
