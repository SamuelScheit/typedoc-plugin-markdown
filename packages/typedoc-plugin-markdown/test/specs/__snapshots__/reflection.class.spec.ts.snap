// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: \`abstract\` AbstractClass

## Extended By

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Contents

- [Constructors](AbstractClass.md#constructors)
    - [new AbstractClass](AbstractClass.md#constructors)
- [Properties](AbstractClass.md#properties)
    - [abstractProp](AbstractClass.md#abstract-abstractprop)
- [Methods](AbstractClass.md#methods)
    - [abstractMethod](AbstractClass.md#abstract-abstractmethod)

## Constructors

### new AbstractClass()

> **new AbstractClass**(): [\`AbstractClass\`](AbstractClass.md)

#### Returns

[\`AbstractClass\`](AbstractClass.md)

## Properties

### \`abstract\` abstractProp

> **\`abstract\`** **abstractProp**: \`string\`

Comments for abstractProp

#### Source

[classes.ts:9](http://source-url)

## Methods

### \`abstract\` abstractMethod()

> **\`abstract\`** **abstractMethod**(): \`string\`

Comments for abstractMethod

#### Returns

\`string\`

#### Source

[classes.ts:14](http://source-url)
"
`;

exports[`Class Reflection should compile abstract class: (Output File Strategy "members") (Option Group "2") 1`] = `
"# \`abstract\` AbstractClass

## Extended By

- [\`DerivedClassA\`](DerivedClassA.md)
- [\`DerivedClassB\`](DerivedClassB.md)

## Contents

- [Constructors](AbstractClass.md#constructors)
    - [new AbstractClass](AbstractClass.md#constructors)
- [Properties](AbstractClass.md#properties)
- [Methods](AbstractClass.md#methods)
    - [abstractMethod](AbstractClass.md#abstract-abstractmethod)

## Constructors

### new AbstractClass()

\`\`\`ts
new AbstractClass(): AbstractClass
\`\`\`

#### Returns

[\`AbstractClass\`](AbstractClass.md)

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`abstract\` | \`abstractProp\` | \`string\` | Comments for abstractProp |

## Methods

### \`abstract\` abstractMethod()

\`\`\`ts
abstract abstractMethod(): string
\`\`\`

Comments for abstractMethod

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithAccessors

Comments for ClassWithAccessors

## Contents

- [Constructors](ClassWithAccessors.md#constructors)
    - [new ClassWithAccessors](ClassWithAccessors.md#constructors)
- [Properties](ClassWithAccessors.md#properties)
    - [privateProp](ClassWithAccessors.md#privateprop)
- [Accessors](ClassWithAccessors.md#accessors)
    - [accessor](ClassWithAccessors.md#accessor)
    - [noGetter](ClassWithAccessors.md#nogetter)
    - [noSetter](ClassWithAccessors.md#nosetter)

## Constructors

### new ClassWithAccessors()

> **new ClassWithAccessors**(): [\`ClassWithAccessors\`](ClassWithAccessors.md)

#### Returns

[\`ClassWithAccessors\`](ClassWithAccessors.md)

## Properties

### privateProp

> **\`private\`** **privateProp**: \`string\`

#### Source

[classes.ts:72](http://source-url)

## Accessors

### accessor

> **\`get\`** **accessor**(): \`string\`

Comments for getter

> **\`set\`** **accessor**(\`value\`): \`void\`

Comments for setter

#### Parameters

• **value**: \`string\`

Param comments

#### Returns

\`string\`

#### Source

[classes.ts:76](http://source-url)

***

### noGetter

> **\`set\`** **noGetter**(\`x\`): \`void\`

#### Parameters

• **x**: \`string\`

#### Source

[classes.ts:92](http://source-url)

***

### noSetter

> **\`get\`** **noSetter**(): \`string\`

#### Returns

\`string\`

#### Source

[classes.ts:88](http://source-url)
"
`;

exports[`Class Reflection should compile class with accessors: (Output File Strategy "members") (Option Group "2") 1`] = `
"# ClassWithAccessors

Comments for ClassWithAccessors

## Contents

- [Constructors](ClassWithAccessors.md#constructors)
    - [new ClassWithAccessors](ClassWithAccessors.md#constructors)
- [Properties](ClassWithAccessors.md#properties)
- [Accessors](ClassWithAccessors.md#accessors)
    - [accessor](ClassWithAccessors.md#accessor)
    - [noGetter](ClassWithAccessors.md#nogetter)
    - [noSetter](ClassWithAccessors.md#nosetter)

## Constructors

### new ClassWithAccessors()

\`\`\`ts
new ClassWithAccessors(): ClassWithAccessors
\`\`\`

#### Returns

[\`ClassWithAccessors\`](ClassWithAccessors.md)

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`private\` | \`privateProp\` | \`string\` | - |

## Accessors

### accessor

\`\`\`ts
get accessor(): string
\`\`\`

Comments for getter

\`\`\`ts
set accessor(value): void
\`\`\`

Comments for setter

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`value\` | \`string\` | Param comments |

#### Returns

\`string\`

***

### noGetter

\`\`\`ts
set noGetter(x): void
\`\`\`

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`x\` | \`string\` |

***

### noSetter

\`\`\`ts
get noSetter(): string
\`\`\`

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithConstructorOverloads

Comments for ClassWithConstructorOverloads

## Contents

- [Constructors](ClassWithConstructorOverloads.md#constructors)
    - [new ClassWithConstructorOverloads](ClassWithConstructorOverloads.md#constructors)

## Constructors

### new ClassWithConstructorOverloads(x, y)

> **new ClassWithConstructorOverloads**(\`x\`, \`y\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

• **x**: \`number\`

Comments for x number

• **y**: \`string\`

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Source

[classes.ts:50](http://source-url)

### new ClassWithConstructorOverloads(x)

> **new ClassWithConstructorOverloads**(\`x\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

• **x**: \`string\`

Comments for x string

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Source

[classes.ts:55](http://source-url)

### new ClassWithConstructorOverloads(s)

> **new ClassWithConstructorOverloads**(\`s\`): [\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Parameters

• **s**: \`string\`

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

#### Source

[classes.ts:56](http://source-url)
"
`;

exports[`Class Reflection should compile class with constructor overloads: (Output File Strategy "members") (Option Group "2") 1`] = `
"# ClassWithConstructorOverloads

Comments for ClassWithConstructorOverloads

## Contents

- [Constructors](ClassWithConstructorOverloads.md#constructors)
    - [new ClassWithConstructorOverloads](ClassWithConstructorOverloads.md#constructors)

## Constructors

### new ClassWithConstructorOverloads(x, y)

\`\`\`ts
new ClassWithConstructorOverloads(x, y): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`number\` | Comments for x number |
| \`y\` | \`string\` |  |

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

### new ClassWithConstructorOverloads(x)

\`\`\`ts
new ClassWithConstructorOverloads(x): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type | Description |
| :------ | :------ | :------ |
| \`x\` | \`string\` | Comments for x string |

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)

### new ClassWithConstructorOverloads(s)

\`\`\`ts
new ClassWithConstructorOverloads(s): ClassWithConstructorOverloads
\`\`\`

#### Parameters

| Parameter | Type |
| :------ | :------ |
| \`s\` | \`string\` |

#### Returns

[\`ClassWithConstructorOverloads\`](ClassWithConstructorOverloads.md)
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: \`abstract\` ClassWithModifiers

Comments for ClassWithModifiers

## Contents

- [Constructors](ClassWithModifiers.md#constructors)
    - [new ClassWithModifiers](ClassWithModifiers.md#constructors)
- [Properties](ClassWithModifiers.md#properties)
    - [privateProp](ClassWithModifiers.md#privateprop)
    - [protectedProp](ClassWithModifiers.md#protectedprop)
    - [publicPropWithDefault](ClassWithModifiers.md#publicpropwithdefault)
    - [readonlyProp](ClassWithModifiers.md#readonlyprop)
    - [staticProp](ClassWithModifiers.md#staticprop)
- [Methods](ClassWithModifiers.md#methods)
    - [privateMethod](ClassWithModifiers.md#privatemethod)
    - [publicMethod](ClassWithModifiers.md#publicmethod)
    - [staticMethod](ClassWithModifiers.md#staticmethod)

## Constructors

### new ClassWithModifiers()

> **new ClassWithModifiers**(): [\`ClassWithModifiers\`](ClassWithModifiers.md)

#### Returns

[\`ClassWithModifiers\`](ClassWithModifiers.md)

## Properties

### privateProp

> **\`private\`** **privateProp**: \`string\`

Comments for privateProp

#### Source

[classes.ts:111](http://source-url)

***

### protectedProp

> **\`protected\`** **protectedProp**: \`string\`

Comments for protectedProp

#### Source

[classes.ts:121](http://source-url)

***

### publicPropWithDefault

> **publicPropWithDefault**: \`string\` = \`'propWithDefault'\`

Comments for propWithDefault

#### Source

[classes.ts:126](http://source-url)

***

### readonlyProp

> **\`readonly\`** **readonlyProp**: \`string\`

Comments for abstractProperty

#### Source

[classes.ts:116](http://source-url)

***

### staticProp

> **\`static\`** **staticProp**: \`string\`

Comments for staticProp

#### Source

[classes.ts:106](http://source-url)

## Methods

### privateMethod()

> **\`private\`** **privateMethod**(): \`void\`

Comment for privateMethod

#### Returns

\`void\`

#### Source

[classes.ts:138](http://source-url)

***

### publicMethod()

> **publicMethod**(): \`void\`

Comment for publicMethod

#### Returns

\`void\`

#### Source

[classes.ts:131](http://source-url)

***

### staticMethod()

> **\`static\`** **staticMethod**(): \`void\`

Comment for staticMethod

#### Returns

\`void\`

#### Source

[classes.ts:143](http://source-url)
"
`;

exports[`Class Reflection should compile class with modifiers: (Output File Strategy "members") (Option Group "2") 1`] = `
"# \`abstract\` ClassWithModifiers

Comments for ClassWithModifiers

## Contents

- [Constructors](ClassWithModifiers.md#constructors)
    - [new ClassWithModifiers](ClassWithModifiers.md#constructors)
- [Properties](ClassWithModifiers.md#properties)
- [Methods](ClassWithModifiers.md#methods)
    - [privateMethod](ClassWithModifiers.md#privatemethod)
    - [publicMethod](ClassWithModifiers.md#publicmethod)
    - [staticMethod](ClassWithModifiers.md#staticmethod)

## Constructors

### new ClassWithModifiers()

\`\`\`ts
new ClassWithModifiers(): ClassWithModifiers
\`\`\`

#### Returns

[\`ClassWithModifiers\`](ClassWithModifiers.md)

## Properties

| Modifier | Property | Type | Description |
| :------ | :------ | :------ | :------ |
| \`private\` | \`privateProp\` | \`string\` | Comments for privateProp |
| \`public\` | \`protectedProp\` | \`string\` | Comments for protectedProp |
| \`public\` | \`publicPropWithDefault\` | \`string\` | Comments for propWithDefault |
| \`readonly\` | \`readonlyProp\` | \`string\` | Comments for abstractProperty |
| \`static\` | \`staticProp\` | \`string\` | Comments for staticProp |

## Methods

### privateMethod()

\`\`\`ts
private privateMethod(): void
\`\`\`

Comment for privateMethod

#### Returns

\`void\`

***

### publicMethod()

\`\`\`ts
publicMethod(): void
\`\`\`

Comment for publicMethod

#### Returns

\`void\`

***

### staticMethod()

\`\`\`ts
static staticMethod(): void
\`\`\`

Comment for staticMethod

#### Returns

\`void\`
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: ClassWithTypeParameters\\<A, B, C\\>

Comments for ClassWithTypeParameters

## Type parameters

• **A**

Comments for param A

• **B** extends \`string\`

Comments for param B

• **C** = \`boolean\`

## Contents

- [Constructors](ClassWithTypeParameters.md#constructors)
    - [new ClassWithTypeParameters](ClassWithTypeParameters.md#constructors)

## Constructors

### new ClassWithTypeParameters()

> **new ClassWithTypeParameters**\\<\`A\`, \`B\`, \`C\`\\>(): [\`ClassWithTypeParameters\`](ClassWithTypeParameters.md)\\<\`A\`, \`B\`, \`C\`\\>

#### Returns

[\`ClassWithTypeParameters\`](ClassWithTypeParameters.md)\\<\`A\`, \`B\`, \`C\`\\>
"
`;

exports[`Class Reflection should compile class with type parameters: (Output File Strategy "members") (Option Group "2") 1`] = `
"# ClassWithTypeParameters\\<A, B, C\\>

Comments for ClassWithTypeParameters

## Type parameters

| Parameter | Value | Description |
| :------ | :------ | :------ |
| \`A\` | - | Comments for param A |
| \`B\` extends \`string\` | - | Comments for param B |
| \`C\` | \`boolean\` | - |

## Contents

- [Constructors](ClassWithTypeParameters.md#constructors)
    - [new ClassWithTypeParameters](ClassWithTypeParameters.md#constructors)

## Constructors

### new ClassWithTypeParameters()

\`\`\`ts
new ClassWithTypeParameters<A, B, C>(): ClassWithTypeParameters<A, B, C>
\`\`\`

#### Returns

[\`ClassWithTypeParameters\`](ClassWithTypeParameters.md)\\<\`A\`, \`B\`, \`C\`\\>
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: DerivedClassA

Comments for DerivedClassA

## Extends

- [\`AbstractClass\`](AbstractClass.md)

## Contents

- [Constructors](DerivedClassA.md#constructors)
    - [new DerivedClassA](DerivedClassA.md#constructors)
- [Properties](DerivedClassA.md#properties)
    - [abstractProp](DerivedClassA.md#abstractprop)
    - [derivedProp](DerivedClassA.md#derivedprop)
- [Methods](DerivedClassA.md#methods)
    - [abstractMethod](DerivedClassA.md#abstractmethod)
    - [derivedMethod](DerivedClassA.md#derivedmethod)

## Constructors

### new DerivedClassA()

> **new DerivedClassA**(): [\`DerivedClassA\`](DerivedClassA.md)

#### Returns

[\`DerivedClassA\`](DerivedClassA.md)

#### Inherited from

[\`AbstractClass.constructor\`](AbstractClass.md#constructors)

## Properties

### abstractProp

> **abstractProp**: \`string\` = \`'abstractProp'\`

Comments for abstractProp

#### Overrides

[\`AbstractClass.abstractProp\`](AbstractClass.md#abstract-abstractprop)

#### Source

[classes.ts:21](http://source-url)

***

### derivedProp

> **derivedProp**: \`string\`

#### Source

[classes.ts:22](http://source-url)

## Methods

### abstractMethod()

> **abstractMethod**(): \`string\`

Comments for abstractMethod

#### Returns

\`string\`

#### Overrides

[\`AbstractClass.abstractMethod\`](AbstractClass.md#abstract-abstractmethod)

#### Source

[classes.ts:23](http://source-url)

***

### derivedMethod()

> **derivedMethod**(): \`string\`

#### Returns

\`string\`

#### Source

[classes.ts:26](http://source-url)
"
`;

exports[`Class Reflection should compile derived class: (Output File Strategy "members") (Option Group "2") 1`] = `
"# DerivedClassA

Comments for DerivedClassA

## Extends

- [\`AbstractClass\`](AbstractClass.md)

## Contents

- [Constructors](DerivedClassA.md#constructors)
    - [new DerivedClassA](DerivedClassA.md#constructors)
- [Properties](DerivedClassA.md#properties)
- [Methods](DerivedClassA.md#methods)
    - [abstractMethod](DerivedClassA.md#abstractmethod)
    - [derivedMethod](DerivedClassA.md#derivedmethod)

## Constructors

### new DerivedClassA()

\`\`\`ts
new DerivedClassA(): DerivedClassA
\`\`\`

#### Returns

[\`DerivedClassA\`](DerivedClassA.md)

#### Inherited from

[\`AbstractClass.constructor\`](AbstractClass.md#constructors)

## Properties

| Property | Type | Description | Inheritance |
| :------ | :------ | :------ | :------ |
| \`abstractProp\` | \`string\` | Comments for abstractProp | [\`AbstractClass.abstractProp\`](AbstractClass.md) |
| \`derivedProp\` | \`string\` | - | - |

## Methods

### abstractMethod()

\`\`\`ts
abstractMethod(): string
\`\`\`

Comments for abstractMethod

#### Returns

\`string\`

#### Overrides

[\`AbstractClass.abstractMethod\`](AbstractClass.md#abstract-abstractmethod)

***

### derivedMethod()

\`\`\`ts
derivedMethod(): string
\`\`\`

#### Returns

\`string\`
"
`;

exports[`Class Reflection should compile disposable class: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Class: DisposableClass

## Implements

- \`Disposable\`

## Contents

- [Constructors](DisposableClass.md#constructors)
    - [new DisposableClass](DisposableClass.md#constructors)
- [Methods](DisposableClass.md#methods)
    - [[dispose]](DisposableClass.md#dispose)

## Constructors

### new DisposableClass()

> **new DisposableClass**(): [\`DisposableClass\`](DisposableClass.md)

#### Returns

[\`DisposableClass\`](DisposableClass.md)

## Methods

### \`[dispose]\`()

> **[dispose]**(): \`void\`

#### Returns

\`void\`

#### Implementation of

\`Disposable.[dispose]\`

#### Source

[classes.ts:147](http://source-url)
"
`;
