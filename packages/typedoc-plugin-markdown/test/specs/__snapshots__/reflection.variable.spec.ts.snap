// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Variable Reflection should compile object with symbol: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: objectWithSymbol

> **\`const\`** **objectWithSymbol**: \`object\`

Comments variable with symbol

## Type declaration

### [sym]

> **[sym]**: \`string\` = \`'value'\`

Comments for symbol

## Source

[variables.ts:51](http://source-url)
"
`;

exports[`Variable Reflection should compile object with symbol: (Output File Strategy "members") (Option Group "2") 1`] = `
"# objectWithSymbol

\`\`\`ts
const objectWithSymbol: object;
\`\`\`

Comments variable with symbol

## Type declaration

| Member | Type | Value | Description |
| :------ | :------ | :------ | :------ |
| \`[sym]\` | \`string\` | 'value' | Comments for symbol |

## Source

[variables.ts:51](http://source-url)
"
`;

exports[`Variable Reflection should compile type operator variable: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: typeOperatorVariable

> **\`const\`** **typeOperatorVariable**: unique \`symbol\`

Comments for typeOperatorVariable

## Source

[variables.ts:13](http://source-url)
"
`;

exports[`Variable Reflection should compile type operator variable: (Output File Strategy "members") (Option Group "2") 1`] = `
"# typeOperatorVariable

\`\`\`ts
const typeOperatorVariable: unique symbol;
\`\`\`

Comments for typeOperatorVariable

## Source

[variables.ts:13](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to a string: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: stringVariable

> **\`const\`** **stringVariable**: \`"stringConstWithDefaultValue"\` = \`'stringConstWithDefaultValue'\`

A simple string variable

## Source

[variables.ts:8](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to a string: (Output File Strategy "members") (Option Group "2") 1`] = `
"# stringVariable

\`\`\`ts
const stringVariable: "stringConstWithDefaultValue" = 'stringConstWithDefaultValue';
\`\`\`

A simple string variable

## Source

[variables.ts:8](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to an object literal: (Output File Strategy "members") (Option Group "1") 1`] = `
"# Variable: objectLiteralVariable

> **\`const\`** **objectLiteralVariable**: \`object\`

Comments for objectLiteralVariable

## Type declaration

### \\*

> **\\***: \`string\` = \`'*'\`

### \\*\\*foo\\*\\*

> **\\*\\*foo\\*\\***: \`string\` = \`'**foo**'\`

### \\*foo\\*

> **\\*foo\\***: \`string\` = \`'*foo*'\`

### \\<

> **\\<**: \`string\` = \`'<'\`

### \\<foo

> **\\<foo**: \`string\` = \`'<foo'\`

### \\<foo\\>

> **\\<foo\\>**: \`string\` = \`'<foo>'\`

### \\>

> **\\>**: \`string\` = \`'>'\`

### \\_

> **\\_**: \`string\` = \`'_'\`

### \\_foo\\_

> **\\_foo\\_**: \`string\` = \`'_foo_'\`

### prop\\_with\\_underscore

> **prop\\_with\\_underscore**: \`string\` = \`'prop_with_underscore'\`

### prop\\|with\\|pipes

> **prop\\|with\\|pipes**: \`string\` = \`'prop|with|pipes'\`

### valueA

> **valueA**: \`number\` = \`100\`

### valueB

> **valueB**: \`boolean\` = \`true\`

### valueX

> **valueX**: \`object\`

### valueX.valueA

> **valueA**: \`number\`[]

### valueX.valueY()

> **valueY**: (\`z\`) => \`object\`

#### Parameters

• **z**: \`string\`

#### Returns

\`object\`

##### a

> **a**: \`string\` = \`'test'\`

##### b

> **b**: \`string\` = \`z\`

##### c

> **c**: \`object\`

##### c.a

> **a**: \`number\` = \`1\`

##### c.b

> **b**: \`number\` = \`2\`

### valueX.valueZ

> **valueZ**: \`string\` = \`'foo'\`

### valueY()

> **valueY**: (\`unionParam\`, \`_undercoreParam_\`) => \`string\`

#### Parameters

• **unionParam**: \`"a"\` \\| \`"b"\`

• **\\_undercoreParam\\_**: \`string\`

#### Returns

\`string\`

### \\|

> **\\|**: \`string\` = \`'|'\`

### ~

> **~**: \`string\` = \`'~'\`

## Source

[variables.ts:18](http://source-url)
"
`;

exports[`Variable Reflection should compile variable assigned to an object literal: (Output File Strategy "members") (Option Group "2") 1`] = `
"# objectLiteralVariable

\`\`\`ts
const objectLiteralVariable: object;
\`\`\`

Comments for objectLiteralVariable

## Type declaration

| Member | Type | Value |
| :------ | :------ | :------ |
| \`*\` | \`string\` | '\\*' |
| \`**foo**\` | \`string\` | '\\*\\*foo\\*\\*' |
| \`*foo*\` | \`string\` | '\\*foo\\*' |
| \`<\` | \`string\` | '\\<' |
| \`<foo\` | \`string\` | '\\<foo' |
| \`<foo>\` | \`string\` | '\\<foo\\>' |
| \`>\` | \`string\` | '\\>' |
| \`_\` | \`string\` | '\\_' |
| \`_foo_\` | \`string\` | '\\_foo\\_' |
| \`prop_with_underscore\` | \`string\` | 'prop\\_with\\_underscore' |
| prop\\|with\\|pipes | \`string\` | 'prop\\|with\\|pipes' |
| \`valueA\` | \`number\` | 100 |
| \`valueB\` | \`boolean\` | true |
| \`valueX\` | \`object\` | - |
| \`valueX.valueA\` | \`number\`[] | - |
| \`valueX.valueY\` | (\`z\`: \`string\`) => \`object\` | - |
| \`valueX.valueZ\` | \`string\` | 'foo' |
| \`valueY\` | (\`unionParam\`: \`"a"\` \\| \`"b"\`, \`_undercoreParam_\`: \`string\`) => \`string\` | - |
| \\| | \`string\` | '\\|' |
| \`~\` | \`string\` | '~' |

## Source

[variables.ts:18](http://source-url)
"
`;
