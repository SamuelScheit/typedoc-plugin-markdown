{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "allOf": [
    {
      "$ref": "https://typedoc.org/schema.json"
    },
    {
      "type": "object",
      "properties": {
        "anchorPrefix": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Custom anchor prefix when anchoring to in-page symbols."
        },
        "blockTagsPreserveOrder": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[typedoc-plugin-markdown] Specifies comment block tags that should preserve their position in relation to the comment summary.",
          "default": []
        },
        "classPropertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of property groups for classes.",
          "default": "list"
        },
        "entryFileName": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The file name of the entry page.",
          "default": "README"
        },
        "entryModule": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The name of a module that should act as the root page for the documentation."
        },
        "enumMembersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of enumeration members.",
          "default": "list"
        },
        "excludeGroups": {
          "type": "boolean",
          "deprecated": "This option has been renamed hideGroupHeadings to better reflect its purpose.",
          "description": "[typedoc-plugin-markdown] This option has been renamed hideGroupHeadings to better reflect its purpose."
        },
        "excludeScopesInPaths": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Exclude writing @ scope directories in paths."
        },
        "expandObjects": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Expand objects inside declarations."
        },
        "expandParameters": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Expand parameters in signature parentheses to display type information."
        },
        "fileExtension": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Specify the file extension for generated output files.",
          "default": ".md"
        },
        "flattenOutputFiles": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Flatten output files to a single directory."
        },
        "hideBreadcrumbs": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print breadcrumbs."
        },
        "hideGroupHeadings": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Excludes grouping by kind so all members are rendered and sorted at the same level."
        },
        "hidePageHeader": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print page header."
        },
        "hidePageTitle": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Do not print page title."
        },
        "indexFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of index items.",
          "default": "list"
        },
        "interfacePropertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of property groups for interfaces.",
          "default": "list"
        },
        "membersWithOwnFile": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Enum",
              "Variable",
              "Function",
              "Class",
              "Interface",
              "TypeAlias"
            ]
          },
          "description": "[typedoc-plugin-markdown] Determines which members are exported to their own file when `outputFileStrategy` equals `members`.",
          "default": [
            "Enum",
            "Variable",
            "Function",
            "Class",
            "Interface",
            "TypeAlias"
          ]
        },
        "mergeReadme": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Merges the resolved readme into the project index page."
        },
        "modulesFileName": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] The file name of the separate modules / index page."
        },
        "navigationModel": {
          "type": "object",
          "properties": {
            "excludeGroups": {
              "type": "boolean"
            },
            "excludeCategories": {
              "type": "boolean"
            },
            "excludeFolders": {
              "type": "boolean"
            }
          },
          "deprecated": "This option has been deprecated in favour of TypeDoc `navigation` option.",
          "description": "[typedoc-plugin-markdown] This option has been deprecated in favour of TypeDoc `navigation` option.",
          "default": {
            "excludeGroups": false,
            "excludeCategories": false,
            "excludeFolders": false
          }
        },
        "outputFileStrategy": {
          "type": "string",
          "enum": [
            "members",
            "modules"
          ],
          "description": "[typedoc-plugin-markdown] Determines how output files are generated.",
          "default": "members"
        },
        "parametersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of parameter and type parameter groups.",
          "default": "list"
        },
        "preserveAnchorCasing": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Preserve anchor casing when generating link to symbols."
        },
        "propertiesFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of property groups for interfaces and classes.",
          "default": "list"
        },
        "propertyMembersFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of style for property members for interfaces and classes.",
          "default": "list"
        },
        "publicPath": {
          "type": "string",
          "description": "[typedoc-plugin-markdown] Specify the base path for all urls."
        },
        "sanitizeComments": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Sanitize HTML and JSX inside JsDoc comments."
        },
        "tableColumnSettings": {
          "type": "object",
          "properties": {
            "hideDefaults": {
              "type": "boolean"
            },
            "hideInherited": {
              "type": "boolean"
            },
            "hideModifiers": {
              "type": "boolean"
            },
            "hideOverrides": {
              "type": "boolean"
            },
            "hideSources": {
              "type": "boolean"
            },
            "hideValues": {
              "type": "boolean"
            },
            "leftAlignHeaders": {
              "type": "boolean"
            }
          },
          "description": "[typedoc-plugin-markdown] Control how table columns are configured and displayed.",
          "default": {
            "hideDefaults": false,
            "hideInherited": false,
            "hideModifiers": false,
            "hideOverrides": false,
            "hideSources": false,
            "hideValues": false,
            "leftAlignHeaders": false
          }
        },
        "textContentMappings": {
          "type": "object",
          "properties": {
            "header.title": {
              "type": "string"
            },
            "header.docs": {
              "type": "string"
            },
            "breadcrumbs.home": {
              "type": "string"
            },
            "title.indexPage": {
              "type": "string"
            },
            "title.memberPage": {
              "type": "string"
            },
            "footer.text": {
              "type": "string"
            }
          },
          "description": "[typedoc-plugin-markdown] Change specific text placeholders in the template.",
          "default": {
            "header.title": "{projectName} {version}",
            "header.docs": "Docs",
            "breadcrumbs.home": "{projectName} {version}",
            "title.indexPage": "{projectName} {version}",
            "title.memberPage": "{kind}: {name}",
            "footer.text": ""
          }
        },
        "typeDeclarationFormat": {
          "type": "string",
          "enum": [
            "list",
            "table",
            "htmlTable"
          ],
          "description": "[typedoc-plugin-markdown] Sets the format of style for type declaration members.",
          "default": "list"
        },
        "useCodeBlocks": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Wraps signatures and declarations in code blocks."
        },
        "useHTMLAnchors": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Add HTML named anchors to headings and table rows."
        },
        "useHTMLEncodedBrackets": {
          "type": "boolean",
          "description": "[typedoc-plugin-markdown] Use HTML encoded entities for angle brackets."
        }
      },
      "description": "Describes the options declared by the plugin.",
      "definitions": {}
    }
  ]
}